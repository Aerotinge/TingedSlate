####################################################
# EMPEROR events
# By Sergei Ivanov
####################################################
# EMP.12000-EMP.12999

namespace = EMP

character_event = {
    id = EMP.12010
    hide_window = yes

    is_triggered_only = yes # on_death

    trigger = {
		is_member_of_hre = yes
    }

	immediate = {
		any_demesne_title = {
			set_title_flag = hre_reichsfreiheit
		}
	}
}

character_event = {
    id = EMP.12011
    hide_window = yes

    is_triggered_only = yes # on_death

    trigger = {
		offmap_hre = {
			has_status = hre_shattered
			governor = { character = ROOT }
		}
    }

	immediate = {
		any_demesne_title = {
			limit = {
				NOT = {
					tier = EMPEROR
					#title = e_hre
				}
			}
			set_title_flag = hre_kronbesitz
		}
	}
}

character_event = {
    id = EMP.12020
    hide_window = yes

    is_triggered_only = yes # on_new_holder_inheritance

    trigger = {
		offmap_hre = {
			has_status = hre_shattered
		}
		FROM = {
			has_title_flag = hre_reichsfreiheit
		}
    }

	immediate = {
		if = {
			limit = {
				primary_title = {
					title = FROM
				}
				independent = yes
				NOT = { # No suzerain, which breaks on stupid succ_gavelkind
					suzerain = { always = yes }
				}
			}

			offmap_hre_tributaries_join_effect = yes
		}
		FROM = {
			clr_title_flag = hre_reichsfreiheit
		}
	}
}

character_event = {
    id = EMP.12021
    hide_window = yes

    is_triggered_only = yes # on_new_holder_inheritance

    trigger = {
		offmap_hre = {
			has_status = hre_shattered
		}
		FROM = {
			has_title_flag = hre_kronbesitz
		}
    }

	immediate = {
		if = { # inherit titles is not the primary_title, nothing happen
			limit = {
				primary_title = {
					FROM = {
						OR = {
							tier = PREV
							lower_tier_than = PREV
						}
						NOT = { title = PREV }
					}
				}
			}
		}
		else_if = { # inherit titles is the primary_title and becomes direct vassal of emperor
			limit = {
				primary_title = {
					title = FROM
				}
				liege = {
					is_offmap_governor = offmap_hre
				}
			}
			set_defacto_liege = THIS
			offmap_hre_tributaries_join_effect = yes
		}
		else = { # inherited titles is the primary_title but not direct vassal of emperor
		}
		FROM = {
			clr_title_flag = hre_kronbesitz
		}
	}
}

character_event = {
	id = EMP.12110

	is_triggered_only = yes # on_startup
	
	hide_window = yes
 
	trigger = {
		offmap_hre = {
			governor = {
				character = ROOT
			}
		}
	}
    
	immediate = {
		offmap_hre = {
			governor_title = {
				# Suppress auto-generated governor if there's one. It is an offmap_power hardcoded behaviour and no way to stop it from spawning every startup.
				if = {
					limit = {
						holder_scope = {
							is_landed = no
						}
					}

					e_pirates = {
						copy_title_history = PREV
					}
					unsafe_destroy_landed_title = THIS
					activate_title = {
						title = THIS
						status = no
					}
					copy_title_history = e_pirates
				}
				# Else, congrat you're a valid HRE holder. Have fun.
			}
		}
	}
}

character_event = {
	id = EMP.12120

	is_triggered_only = yes # on_unlanded
	
	hide_window = yes
 
	trigger = {
		has_landed_title = e_hre
	}
    
	immediate = {
		if = {
			limit = {
				e_hre = {
					current_heir = {
						is_landed = yes
					}
				}
			}
			e_hre = {
				current_heir = {
					gain_title = {
						target = PREV
						type = faction_demand
					}
				}
			}
		}
		else = {
			# narrative_event first: GG HRE
			offmap_hre = {
				governor_title = {
					unsafe_destroy_landed_title = THIS
					activate_title = {
						title = THIS
						status = no
					}
				}
			}
		}
	}
}

character_event = {
	id = EMP.12130

	hide_window = yes

	is_triggered_only = yes # on_character_renamed

	trigger = {
		# Do not scope offmap_power directly, for a character could have multiple offmap titles
		offmap_hre = {
			governor = {
				character = ROOT
			}
		}
	}

	immediate = {
		offmap_hre_ruler_name_sync_effect = yes
	}
}

character_event = {
	id = EMP.12140
	
	hide_window = yes
	
	is_triggered_only = yes # on_offmap_governor_changed

	trigger = {
		FROMFROM = {
			is_offmap_tag = offmap_hre
		}
	}
	
	immediate = {
		if = {
			limit = {
				FROMFROM = {
					has_status = hre_shattered
				}
			}
			any_playable_ruler = {
				limit = {
					suzerain = {
						NOT = { is_offmap_governor = offmap_hre }
					}
					OR = {
						is_tributary = { type = hre_prince }
						is_tributary = { type = hre_free_imp_city }
					}
				}
				suzerain = {
					remove_tributary = PREV
				}
				offmap_hre_tributaries_join_effect = yes
			}
			if = {
				limit = {
					has_character_modifier = hre_elector_modifier
				}

				remove_character_modifier = hre_elector_modifier
			}
			offmap_hre_government_de_facto_maintain_effect = yes
		}
		print_hre_governor_update_effect = yes
		offmap_hre_ruler_name_sync_effect = yes
	}
}

character_event = {
	id = EMP.12150

	hide_window = yes
	offmap = only

	is_triggered_only = yes # on_offmap_ruler_changed

	trigger = { is_offmap_tag = offmap_hre }

	immediate = {
		print_hre_ruler_update_effect = yes
		offmap_hre_ruler_name_sync_effect = yes
	}
}

# Monthly update - Elector
character_event = {
	id = EMP.12220

	is_triggered_only = yes # on_offmap_monthly_pulse

	hide_window = yes

	trigger = {
		is_offmap_governor = offmap_hre
		FROM = {
			has_status = hre_shattered
		}
	}

	immediate = {
		FROM = {
			governor_title = {
				any_tributary = {
					limit = {
						is_member_of_hre = yes
					}

					add_trait = hre_reigning_prince
				}
				any_elector_character = {
					limit = {
						NOT = { character = ROOT }
					}
					remove_character_modifier = hre_elector_modifier
					add_character_modifier = {
						name = hre_elector_modifier
						months = 2
					}
				}
			}
		}
	}
}

# Cleanup events
character_event = {
	id = EMP.12230

	hide_window = yes

	trigger = {
		trait = hre_reigning_prince
		is_member_of_hre = no
	}

	mean_time_to_happen = {
		days = 1
	}

	immediate = {
		remove_trait = hre_reigning_prince
	}
}

narrative_event = {
	id = EMP.12350
	title = EVTNAME_EMP_12350
	desc = EVTDESC_EMP_12350
	picture = "GFX_evt_bloodlines"
	border = "GFX_event_narrative_frame_diplomacy"

	major = yes

	#only_playable = yes
	only_independent = yes
	religion_group = christian
	war = no

	trigger = {
		offmap_hre = {
			governor = {
				character = ROOT
			}
			governor_title = {
				has_law = succ_feudal_elective
			}
			trigger_if = {
				limit = { has_dlc = "Conclave" }

				governor = {
					primary_title = {
						calc_true_if = {
							amount >= 2

							has_law = law_voting_power_1
							has_law = banish_voting_power_1
							has_law = execution_voting_power_1
							has_law = revoke_title_voting_power_1
							has_law = grant_title_voting_power_1
							has_law = imprison_voting_power_1
							has_law = war_voting_power_1
						}
					}
				}
			}
			trigger_else = {
				governor_title = {
					OR = {
						has_law = crown_authority_0
						has_law = crown_authority_1
						has_law = crown_authority_2
						AND = {
							has_law = crown_authority_3
							has_law = investiture_law_0
						}
					}
				}
			}
		}

		OR = {
			total_years_played >= 500
			year >= 1350
		}
	}

	major_trigger = {
		ai = no
		OR = {
			top_liege = {
				OR = {
					has_landed_title = e_hre
					is_member_of_hre = yes
				}
			}
			any_neighbor_independent_ruler = {
				OR = {
					has_landed_title = e_hre
					is_member_of_hre = yes
				}
			}
		}
	}

	mean_time_to_happen = {
		years = 5

		mult_modifier = {
			factor = 0.5

			year >= 1355
		}
	}

	immediate = {
		hidden_tooltip = {
			# Create Electors, depending on capital location:
			princely_elective_apply_elector_setup_effect = yes

			offmap_hre = {
				set_status = hre_shattered
				set_offmap_flag = hre_diet_metz_enacted
				governor_title = {
					add_law = {
						law = succ_hre_elective
						cooldown = no
						#opinion_effect = no # Anger all current electors
					}
				}
			}
			offmap_hre_government_de_facto_maintain_effect = yes
			offmap_hre_ruler_name_sync_effect = yes

			any_tributary = {
				limit = {
					is_member_of_hre = yes
				}
				add_trait = hre_reigning_prince
			}
		}
	}

	option = {
		name = EVTOPTA_HF_16002 # I... I have to do something about this.
		trigger = {
			has_landed_title = e_hre
		}
	}
	option = {
		name = EVTOPTA62800 # Probably a wise move.
		trigger = {
			NOT = { has_landed_title = e_hre }
			OR = {
				same_realm = ROOT
				is_member_of_hre = yes
			}
		}
	}
	option = {
		name = EVTOPTA_MNM_4610 # That's nice, I guess.
		trigger = {
			NOR = {
				has_landed_title = e_hre
				same_realm = ROOT
				is_member_of_hre = yes
			}
		}
	}
}